{"version":3,"sources":["webpack:///./src/components/Discography/Discography.style.js","webpack:///./src/components/Discography/Discography.component.js","webpack:///./src/components/Track/Track.style.js","webpack:///./src/components/Track/Track.component.js","webpack:///./src/components/Player/Player.component.js","webpack:///./src/components/Release/Release.style.js","webpack:///./src/components/Release/Release.component.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["styled","div","_templateObject","Discography","_ref","children","react_default","a","createElement","Discography_style","li","Track_style_templateObject","Track","props","Track_style","type","className","onClick","playTitle","track","title","id","nowPlaying","Player","playerQuery","width","height","src","frameborder","allow","figure","Release_style_templateObject","Release","_this","_Component","call","this","toggleTracklist","setState","isTracklistOpen","state","encodeURIComponent","release","artist","isPlayerOpen","render","_this2","Release_style","Player_component","imageUrl","alt","tracklist","map","index","Track_component","key","Component","query","IndexPage","data","layout","Discography_component","allDiscogsRelease","edges","Release_component","node","artists","name","images","find","image","uri","duration","position","year","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","margin","maxWidth","padding","textAlign","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","Helmet_default","site","siteMetadata","meta","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-a05801126fbf0cfa7413.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n  -webkit-columns: 3 320px;\n  -moz-columns: 3 320px;\n  columns: 3 320px;\n  -webkit-column-gap: 15px;\n  -moz-column-gap: 15px;\n  column-gap: 15px;\n  width: 90%;\n  max-width: 1100px;\n  margin: 50px auto;\n`;\n","import React from 'react';\n\nimport Style from './Discography.style'\n\nconst Discography = ({ children }) => (\n  <Style>\n    {children}\n  </Style>\n);\n\nexport default Discography;\n","import styled from 'styled-components';\n\nexport default styled.li`\n  list-style-type: none;\n  font-family: 'Playfair Display', serif;\n  font-style: italic;\n  .play-pause {\n    font-family: 'Lato', sans-serif;\n    display: inline-block;\n    width: 30px;\n    height: 30px;\n    padding: 0;\n    margin: 5px 10px 5px 0px;\n    border: 1px solid #444;\n    border-radius: 50%;\n    outline: 0;\n    background: transparent;\n    position: relative;\n    top: 2px;\n  }\n\n  .play-pause__playhead {\n    display: block;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 8px 0 8px 15px;\n    border-color: transparent transparent transparent #444;\n    margin: auto;\n    position: relative;\n    left: 1px;\n  }\n\n  .play-pause__pausehead {\n    display: flex;\n    width: 15px;\n    height: 15px;\n    position: relative;\n    margin: auto;\n\n    &:before,\n    &:after {\n      content: '';\n      flex: 1;\n      width: 50%;\n      height: 100%;\n      background: #444;\n    }\n\n    &:after {\n      margin-left: 4px;\n    }\n  }\n`;\n","import React from 'react';\nimport Style from './Track.style';\n\nconst Track = (props) => (\n  <Style>\n    <button\n      type=\"button\"\n      className=\"play-pause\"\n      onClick={() => props.playTitle(props.track.title)}\n    >\n      {props.id !== props.nowPlaying ? (\n        <span className=\"play-pause__playhead\" />\n      ) : (\n        <span className=\"play-pause__pausehead\" />\n      )}\n    </button>\n    {props.track.title}\n  </Style>\n);\n\nexport default Track;\n","import React from 'react';\n\nconst Player = ({ playerQuery }) => (\n  <iframe\n    title={`${playerQuery}`}\n    id=\"ytplayer\"\n    type=\"text/html\"\n    width=\"318\"\n    height=\"318\"\n    src={`https://www.youtube.com/embed?listType=search&amp;color=white&amp;autoplay=1&amp;list=${playerQuery}`}\n    frameborder=\"0\"\n    allow=\"autoplay; encrypted-media\"\n  />\n);\n\nexport default Player;\n","import styled from 'styled-components';\n\nexport default styled.figure`\n  border: 4px solid #444;\n  margin: 0 2px 15px;\n  padding: 15px;\n  padding-bottom: 10px;\n  display: inline-block;\n  -webkit-column-break-inside: avoid;\n  -webkit-backface-visibility: hidden;\n\n  .artist {\n    font-weight: bold;\n    font-size: 2em;\n  }\n  .title {\n    font-size: 1.5em;\n  }\n  ul {\n    margin: 10px 0;\n    padding: 0;\n    text-align: left;\n  }\n  button {\n    background-color: white;\n    font-size: 0.9em;\n    border: none;\n    background-position: 0 22px;\n    padding: 0;\n    padding-bottom: 10px;\n    margin-top: 10px;\n    background-repeat: repeat-x;\n    background-size: auto 3px;\n    background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg id='Squiggle-svg' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:ev='http://www.w3.org/2001/xml-events' viewBox='0 0 20 4'%3E%3Cpath fill='none' stroke='%23444' stroke-width='1' class='st0' d='M0,3.5 c 5,0,5,-3,10,-3 s 5,3,10,3 c 5,0,5,-3,10,-3 s 5,3,10,3'/%3E%3C/svg%3E\");\n    cursor: pointer;\n    &:hover {\n      transition: background-position 1s;\n      background-position: 60px 22px;\n    }\n  }\n\n  img {\n    width: 100%;\n    height: auto;\n    padding-bottom: 15px;\n    margin-bottom: 5px;\n  }\n  \n  figcaption {\n    font-size: 0.9rem;\n    color: #444;\n    line-height: 1.5;\n  }\n  \n  small {\n    font-size: 1rem;\n    float: right;\n    text-transform: uppercase;\n    color: #aaa;\n  }\n  \n  small a {\n    color: #666;\n    text-decoration: none;\n    transition: 0.4s color;\n  }\n`;\n","import React, { Component } from 'react';\nimport Track from '../Track';\nimport Player from '../Player';\nimport Style from './Release.style';\n\nclass Release extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTracklistOpen: false,\n      isPlayerOpen: false,\n      playerQuery: ''\n    };\n  }\n\n  toggleTracklist = () =>\n    this.setState({ isTracklistOpen: !this.state.isTracklistOpen });\n\n  playTitle = (title) => {\n    const playerQuery = encodeURIComponent(\n      `${this.props.release.artist} ${title}`\n    );\n    const isPlayerOpen = !(playerQuery === this.state.playerQuery);\n    this.setState({\n      isPlayerOpen,\n      playerQuery\n    });\n  };\n\n  render() {\n    return (\n      <Style>\n        {!this.state.isPlayerOpen ? (\n          <img\n            src={this.props.release.imageUrl}\n            alt={`${this.props.release.artist} - ${this.props.release.title}`}\n          />\n        ) : (\n          <Player playerQuery={this.state.playerQuery} />\n        )}\n        <figcaption>\n          <span className=\"artist\">{this.props.release.artist}</span>\n          <br />\n          <span className=\"title\">{this.props.release.title}</span>\n        </figcaption>\n        <button onClick={this.toggleTracklist}>\n          {this.state.isTracklistOpen ? 'Hide' : 'See'} tracklist\n        </button>\n        {this.state.isTracklistOpen && (\n          <ul>\n            {this.props.release.tracklist.map((track, index) => {\n              const id = encodeURIComponent(\n                `${this.props.release.artist} ${track.title}`\n              );\n              return (\n                <Track\n                  key={id}\n                  id={id}\n                  track={track}\n                  playTitle={this.playTitle}\n                  nowPlaying={\n                    this.state.isPlayerOpen ? this.state.playerQuery : null\n                  }\n                />\n              );\n            })}\n          </ul>\n        )}\n      </Style>\n    );\n  }\n}\n\nexport default Release;\n","import React from 'react'\nimport { graphql } from \"gatsby\"\n\nimport Discography from '../components/Discography'\nimport Layout from '../components/layout'\nimport Release from '../components/Release'\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <Discography>\n      {data.allDiscogsRelease.edges.map(release => \n        <Release release={{\n          artist: release.node.artists[0].name,\n          imageUrl: release.node.images.find(image => image.type === 'primary')\n            ? release.node.images.find(image => image.type === 'primary').uri\n            : release.node.images.find(image => image.type === 'secondary').uri,\n          title: release.node.title,\n          tracklist: release.node.tracklist.map(track => ({\n            duration: track.duration,\n            title: track.title,\n            position: track.position\n          })),\n          year: release.node.year\n        }} />)}\n    </Discography>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allDiscogsRelease{\n      edges {\n        node {\n          title\n          artists {\n            name\n          }\n          tracklist {\n            title\n            duration\n            position\n          }\n          year\n          images {\n            uri\n            type\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      margin: '0 auto',\n      maxWidth: 960,\n      padding: '1.45rem 1.0875rem',\n    }}\n  >\n    <h1 style={{ \n      margin: 0,\n      textAlign: 'center',\n    }}>\n      <Link\n        to=\"/\"\n        style={{\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Discogs collection showcase' },\n            { name: 'keywords', content: 'music, discogs, showcase, vinyl, gatsby' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}